var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = TestPicker","category":"page"},{"location":"#TestPicker","page":"Home","title":"TestPicker","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for TestPicker.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [TestPicker]","category":"page"},{"location":"#TestPicker.TESTENV_CACHE","page":"Home","title":"TestPicker.TESTENV_CACHE","text":"We reuse the temp environment made by TestEnv to avoid trigger recompilation every time.\n\nThis can be cleared with clear_testenv_cache().\n\n\n\n\n\n","category":"constant"},{"location":"#TestPicker.TestsetInfo","page":"Home","title":"TestPicker.TestsetInfo","text":"Struct representing metadata about a testset.\n\n\n\n\n\n","category":"type"},{"location":"#TestPicker.build_file_testset_map-Tuple{AbstractString, AbstractVector{<:AbstractString}}","page":"Home","title":"TestPicker.build_file_testset_map","text":"Given a list of matched files, extract all contained testsets, and build a map that maps some displayable name for fzf to the relevant data structure.\n\n\n\n\n\n","category":"method"},{"location":"#TestPicker.build_preview_arg-Tuple{String, String}","page":"Home","title":"TestPicker.build_preview_arg","text":"Build the command line function to be run by fzf to preview the relevant code lines.\n\n\n\n\n\n","category":"method"},{"location":"#TestPicker.clean_source-Tuple{LineNumberNode}","page":"Home","title":"TestPicker.clean_source","text":"Obtain the source from the LineNumberNode.\n\n\n\n\n\n","category":"method"},{"location":"#TestPicker.current_pkg-Tuple{}","page":"Home","title":"TestPicker.current_pkg","text":"More flexible version of current_pkg_name from TestEnv.\n\n\n\n\n\n","category":"method"},{"location":"#TestPicker.eval_in_module-Tuple{TestPicker.TestInfo, Pkg.Types.PackageSpec}","page":"Home","title":"TestPicker.eval_in_module","text":"Evaluate ex scoped in a Module, while activating the test environment of pkg.\n\n\n\n\n\n","category":"method"},{"location":"#TestPicker.find_and_run_test_file-Tuple{AbstractString}","page":"Home","title":"TestPicker.find_and_run_test_file","text":"Run fzf with the given input and if the file is a valid one run the test with the Test environment.\n\n\n\n\n\n","category":"method"},{"location":"#TestPicker.find_related_testfile","page":"Home","title":"TestPicker.find_related_testfile","text":"Find all test files that are close to query.\n\n\n\n\n\n","category":"function"},{"location":"#TestPicker.get_matching_files-Tuple{AbstractString, AbstractVector{<:AbstractString}}","page":"Home","title":"TestPicker.get_matching_files","text":"Run a non-interactive command that return all the files getting the match on the given query.\n\n\n\n\n\n","category":"method"},{"location":"#TestPicker.get_preview_dimension-Tuple{REPL.Terminals.TextTerminal}","page":"Home","title":"TestPicker.get_preview_dimension","text":"Utility function to adapt the size of the text width and line position.\n\n\n\n\n\n","category":"method"},{"location":"#TestPicker.get_test_files","page":"Home","title":"TestPicker.get_test_files","text":"get_test_files(pkg::PackageSpec = current_pkg()) -> String, Vector{String}\n\nGet full collection of test files for the given package. Return the absolute path of the test directory and  the collection of test files as paths relative to it.\n\n\n\n\n\n","category":"function"},{"location":"#TestPicker.get_testsets_with_preambles-Tuple{AbstractString}","page":"Home","title":"TestPicker.get_testsets_with_preambles","text":"Fetch all the top nodes from file and split them between a preamble and testsets.\n\n\n\n\n\n","category":"method"},{"location":"#TestPicker.is_testset-Tuple{JuliaSyntax.SyntaxNode}","page":"Home","title":"TestPicker.is_testset","text":"Check whether the given SyntaxNode is a @testset macro block.\n\n\n\n\n\n","category":"method"},{"location":"#TestPicker.last_leaf-Tuple{Any}","page":"Home","title":"TestPicker.last_leaf","text":"Fetch the last leaf from the given node to try to get the ending line of the the testset block.\n\n\n\n\n\n","category":"method"},{"location":"#TestPicker.pick_testset-Tuple{Dict, AbstractString, AbstractString}","page":"Home","title":"TestPicker.pick_testset","text":"Call fzf again to chose which testset to evaluate. The preview is done using rg and bat.\n\n\n\n\n\n","category":"method"},{"location":"#TestPicker.preview_content-Tuple{Test.Error}","page":"Home","title":"TestPicker.preview_content","text":"We connect the error with the backtrace to be previewed.\n\n\n\n\n\n","category":"method"},{"location":"#TestPicker.remove_ansi-Tuple{AbstractString}","page":"Home","title":"TestPicker.remove_ansi","text":"File names come with ansi characters and break stuff...\n\n\n\n\n\n","category":"method"},{"location":"#TestPicker.select_and_run_testset-Tuple{AbstractString, AbstractString}","page":"Home","title":"TestPicker.select_and_run_testset","text":"Given a fuzzy_file query and a testset query return all possible testset that match both the file and the testset names, provide a choice and execute it.\n\n\n\n\n\n","category":"method"},{"location":"#TestPicker.separator-Tuple{}","page":"Home","title":"TestPicker.separator","text":"Separator used by fzf to distinguish the different data components.\n\n\n\n\n\n","category":"method"},{"location":"#TestPicker.visualize_test_results","page":"Home","title":"TestPicker.visualize_test_results","text":"This creates a loop on the latest evaluated test file. It shows a list of the tests that errored and failed with a preview of their stacktrace. You can edit the selected test with Ctrl+e or inspect the stacktrace for errored tests with Enter. It is also possible to inspect the stacktrace as a list with a preview of the source when possible and Ctrl+e edit the source of the current trace.\n\n\n\n\n\n","category":"function"}]
}
